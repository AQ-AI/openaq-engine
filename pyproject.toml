[tool.poetry]
name = "openaq-engine"
version = "0.1.0"
description = ""
authors = ["ChristinaLast <christina.last@outlook.com>"]

[tool.poetry.dependencies]
python = "^3.8"
boto3 = "^1.26.3"
pandas = "^1.5.1"
pydantic = "^1.10.2"
psycopg2-binary = "^2.9.5"
SQLAlchemy = "^1.4.42"
joblib = "^1.2.0"
pyathena = "^2.14.0"
awscli = "^1.27.2"
pytest = "^7.2.0"
shapely = "^1.8.5"
earthengine-api = "^0.1.331"
google-cloud-storage = "^2.6.0"
geetools = "^0.6.14"
mlflow = "^2.0.0"
click-option-group = "^0.5.5"
certifi = "2022.12.07"

[tool.poetry.dev-dependencies]
black = "^22.10.0"
autoflake8 = "^0.4.0"
autopep8 = "^2.0.0"
flake8 = "^5.0.4"
isort = "^5.10.1"
pre-commit = "^2.20.0"
pytest-cov = "^4.0.0"
commitizen = "^2.38.0"

[tool.isort]
line_length = 79
known_first_party = ["openaq_engine", "config"]
multi_line_output = 3
skip = "venv/"
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 79

[tool.mypy]
python_version = 3.10
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
[build-system]
requires = ["poetry-core>=1.1.13"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = [
    "openaq_engine/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "master"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
version_source = "tag"
